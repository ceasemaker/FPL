# Generated by Django 4.2.16 on 2025-09-30 22:12

from decimal import Decimal
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Athlete',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('can_transact', models.BooleanField(blank=True, null=True)),
                ('can_select', models.BooleanField(blank=True, null=True)),
                ('chance_of_playing_next_round', models.IntegerField(blank=True, null=True)),
                ('chance_of_playing_this_round', models.IntegerField(blank=True, null=True)),
                ('code', models.IntegerField(unique=True)),
                ('cost_change_event', models.IntegerField(default=0)),
                ('cost_change_event_fall', models.IntegerField(default=0)),
                ('cost_change_start', models.IntegerField(default=0)),
                ('cost_change_start_fall', models.IntegerField(default=0)),
                ('dreamteam_count', models.IntegerField(default=0)),
                ('element_type', models.IntegerField(blank=True, null=True)),
                ('ep_next', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('ep_this', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('event_points', models.IntegerField(default=0)),
                ('first_name', models.CharField(max_length=255)),
                ('form', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('in_dreamteam', models.BooleanField(default=False)),
                ('news', models.TextField(blank=True, null=True)),
                ('news_added', models.DateTimeField(blank=True, null=True)),
                ('now_cost', models.IntegerField(default=0)),
                ('photo', models.CharField(blank=True, max_length=255, null=True)),
                ('points_per_game', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('removed', models.BooleanField(default=False)),
                ('second_name', models.CharField(max_length=255)),
                ('selected_by_percent', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('special', models.BooleanField(default=False)),
                ('squad_number', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=10, null=True)),
                ('team_code', models.IntegerField(blank=True, null=True)),
                ('total_points', models.IntegerField(default=0)),
                ('transfers_in', models.IntegerField(default=0)),
                ('transfers_in_event', models.IntegerField(default=0)),
                ('transfers_out', models.IntegerField(default=0)),
                ('transfers_out_event', models.IntegerField(default=0)),
                ('value_form', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('value_season', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('web_name', models.CharField(max_length=255)),
                ('region', models.IntegerField(blank=True, null=True)),
                ('team_join_date', models.DateField(blank=True, null=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('has_temporary_code', models.BooleanField(default=False)),
                ('opta_code', models.CharField(blank=True, max_length=50, null=True)),
                ('minutes', models.IntegerField(default=0)),
                ('goals_scored', models.IntegerField(default=0)),
                ('assists', models.IntegerField(default=0)),
                ('clean_sheets', models.IntegerField(default=0)),
                ('goals_conceded', models.IntegerField(default=0)),
                ('own_goals', models.IntegerField(default=0)),
                ('penalties_saved', models.IntegerField(default=0)),
                ('penalties_missed', models.IntegerField(default=0)),
                ('yellow_cards', models.IntegerField(default=0)),
                ('red_cards', models.IntegerField(default=0)),
                ('saves', models.IntegerField(default=0)),
                ('bonus', models.IntegerField(default=0)),
                ('bps', models.IntegerField(default=0)),
                ('influence', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('creativity', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('threat', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('ict_index', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('starts', models.IntegerField(default=0)),
                ('expected_goals', models.DecimalField(blank=True, decimal_places=3, max_digits=13, null=True)),
                ('expected_assists', models.DecimalField(blank=True, decimal_places=3, max_digits=13, null=True)),
                ('expected_goal_involvements', models.DecimalField(blank=True, decimal_places=3, max_digits=13, null=True)),
                ('expected_goals_conceded', models.DecimalField(blank=True, decimal_places=3, max_digits=13, null=True)),
                ('mng_win', models.IntegerField(default=0)),
                ('mng_draw', models.IntegerField(default=0)),
                ('mng_loss', models.IntegerField(default=0)),
                ('mng_underdog_win', models.IntegerField(default=0)),
                ('mng_underdog_draw', models.IntegerField(default=0)),
                ('mng_clean_sheets', models.IntegerField(default=0)),
                ('mng_goals_scored', models.IntegerField(default=0)),
                ('influence_rank', models.IntegerField(blank=True, null=True)),
                ('influence_rank_type', models.IntegerField(blank=True, null=True)),
                ('creativity_rank', models.IntegerField(blank=True, null=True)),
                ('creativity_rank_type', models.IntegerField(blank=True, null=True)),
                ('threat_rank', models.IntegerField(blank=True, null=True)),
                ('threat_rank_type', models.IntegerField(blank=True, null=True)),
                ('ict_index_rank', models.IntegerField(blank=True, null=True)),
                ('ict_index_rank_type', models.IntegerField(blank=True, null=True)),
                ('corners_and_indirect_freekicks_order', models.IntegerField(blank=True, null=True)),
                ('corners_and_indirect_freekicks_text', models.TextField(blank=True, null=True)),
                ('direct_freekicks_order', models.IntegerField(blank=True, null=True)),
                ('direct_freekicks_text', models.TextField(blank=True, null=True)),
                ('penalties_order', models.IntegerField(blank=True, null=True)),
                ('penalties_text', models.TextField(blank=True, null=True)),
                ('expected_goals_per_90', models.DecimalField(blank=True, decimal_places=3, max_digits=13, null=True)),
                ('saves_per_90', models.DecimalField(blank=True, decimal_places=3, max_digits=13, null=True)),
                ('expected_assists_per_90', models.DecimalField(blank=True, decimal_places=3, max_digits=13, null=True)),
                ('expected_goal_involvements_per_90', models.DecimalField(blank=True, decimal_places=3, max_digits=13, null=True)),
                ('expected_goals_conceded_per_90', models.DecimalField(blank=True, decimal_places=3, max_digits=13, null=True)),
                ('goals_conceded_per_90', models.DecimalField(blank=True, decimal_places=3, max_digits=13, null=True)),
                ('now_cost_rank', models.IntegerField(blank=True, null=True)),
                ('now_cost_rank_type', models.IntegerField(blank=True, null=True)),
                ('form_rank', models.IntegerField(blank=True, null=True)),
                ('form_rank_type', models.IntegerField(blank=True, null=True)),
                ('points_per_game_rank', models.IntegerField(blank=True, null=True)),
                ('points_per_game_rank_type', models.IntegerField(blank=True, null=True)),
                ('selected_rank', models.IntegerField(blank=True, null=True)),
                ('selected_rank_type', models.IntegerField(blank=True, null=True)),
                ('starts_per_90', models.DecimalField(blank=True, decimal_places=3, max_digits=13, null=True)),
                ('clean_sheets_per_90', models.DecimalField(blank=True, decimal_places=3, max_digits=13, null=True)),
            ],
            options={
                'db_table': 'athletes',
                'ordering': ['id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AthleteStat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('game_week', models.PositiveIntegerField()),
                ('minutes', models.IntegerField(default=0)),
                ('goals_scored', models.IntegerField(default=0)),
                ('assists', models.IntegerField(default=0)),
                ('clean_sheets', models.IntegerField(default=0)),
                ('goals_conceded', models.IntegerField(default=0)),
                ('own_goals', models.IntegerField(default=0)),
                ('penalties_saved', models.IntegerField(default=0)),
                ('penalties_missed', models.IntegerField(default=0)),
                ('yellow_cards', models.IntegerField(default=0)),
                ('red_cards', models.IntegerField(default=0)),
                ('saves', models.IntegerField(default=0)),
                ('bonus', models.IntegerField(default=0)),
                ('bps', models.IntegerField(default=0)),
                ('influence', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=12)),
                ('creativity', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=12)),
                ('threat', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=12)),
                ('ict_index', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=12)),
                ('starts', models.IntegerField(default=0)),
                ('expected_goals', models.DecimalField(decimal_places=3, default=Decimal('0'), max_digits=13)),
                ('expected_assists', models.DecimalField(decimal_places=3, default=Decimal('0'), max_digits=13)),
                ('expected_goal_involvements', models.DecimalField(decimal_places=3, default=Decimal('0'), max_digits=13)),
                ('expected_goals_conceded', models.DecimalField(decimal_places=3, default=Decimal('0'), max_digits=13)),
                ('mng_win', models.IntegerField(default=0)),
                ('mng_draw', models.IntegerField(default=0)),
                ('mng_loss', models.IntegerField(default=0)),
                ('mng_underdog_win', models.IntegerField(default=0)),
                ('mng_underdog_draw', models.IntegerField(default=0)),
                ('mng_clean_sheets', models.IntegerField(default=0)),
                ('mng_goals_scored', models.IntegerField(default=0)),
                ('total_points', models.IntegerField(default=0)),
                ('in_dreamteam', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'athlete_stats',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ElementSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('fixtures', models.JSONField(default=list)),
                ('history', models.JSONField(default=list)),
                ('history_past', models.JSONField(default=list)),
            ],
            options={
                'db_table': 'athlete_element_summaries',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EventStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('event', models.IntegerField(blank=True, null=True)),
                ('bonus_added', models.BooleanField(default=False)),
                ('status', models.CharField(max_length=50)),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('notes', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'event_statuses',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('code', models.IntegerField(blank=True, null=True, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('short_name', models.CharField(blank=True, max_length=10, null=True)),
                ('strength', models.IntegerField(blank=True, null=True)),
                ('played', models.IntegerField(default=0)),
                ('win', models.IntegerField(default=0)),
                ('draw', models.IntegerField(default=0)),
                ('loss', models.IntegerField(default=0)),
                ('points', models.IntegerField(default=0)),
                ('position', models.IntegerField(blank=True, null=True)),
                ('form', models.CharField(blank=True, max_length=50, null=True)),
                ('unavailable', models.BooleanField(default=False)),
                ('strength_overall_home', models.IntegerField(blank=True, null=True)),
                ('strength_overall_away', models.IntegerField(blank=True, null=True)),
                ('strength_attack_home', models.IntegerField(blank=True, null=True)),
                ('strength_attack_away', models.IntegerField(blank=True, null=True)),
                ('strength_defence_home', models.IntegerField(blank=True, null=True)),
                ('strength_defence_away', models.IntegerField(blank=True, null=True)),
                ('team_division', models.IntegerField(blank=True, null=True)),
                ('pulse_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'teams',
                'ordering': ['id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SetPieceNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('note', models.TextField()),
                ('team', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='set_piece_note', to='etl.team')),
            ],
            options={
                'db_table': 'team_set_piece_notes',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RawEndpointSnapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('endpoint', models.CharField(max_length=255)),
                ('identifier', models.CharField(blank=True, max_length=255, null=True)),
                ('payload', models.JSONField()),
            ],
            options={
                'db_table': 'raw_endpoint_snapshots',
                'abstract': False,
                'indexes': [models.Index(fields=['endpoint'], name='raw_endpoin_endpoin_5cad3a_idx')],
            },
        ),
        migrations.CreateModel(
            name='Fixture',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('code', models.IntegerField(blank=True, null=True)),
                ('event', models.IntegerField(blank=True, null=True)),
                ('finished', models.BooleanField(default=False)),
                ('finished_provisional', models.BooleanField(default=False)),
                ('kickoff_time', models.DateTimeField(blank=True, null=True)),
                ('minutes', models.IntegerField(default=0)),
                ('provisional_start_time', models.BooleanField(default=False)),
                ('started', models.BooleanField(default=False)),
                ('team_a_score', models.IntegerField(blank=True, null=True)),
                ('team_h_score', models.IntegerField(blank=True, null=True)),
                ('stats', models.JSONField(default=dict)),
                ('team_a_difficulty', models.IntegerField(blank=True, null=True)),
                ('team_h_difficulty', models.IntegerField(blank=True, null=True)),
                ('pulse_id', models.IntegerField(blank=True, null=True)),
                ('team_a', models.ForeignKey(blank=True, db_column='team_a', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='away_fixtures', to='etl.team')),
                ('team_h', models.ForeignKey(blank=True, db_column='team_h', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='home_fixtures', to='etl.team')),
            ],
            options={
                'db_table': 'fixtures',
                'ordering': ['kickoff_time'],
                'abstract': False,
            },
        ),
        migrations.AddConstraint(
            model_name='eventstatus',
            constraint=models.UniqueConstraint(fields=('event', 'status'), name='unique_event_status'),
        ),
        migrations.AddField(
            model_name='elementsummary',
            name='athlete',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='summary', to='etl.athlete'),
        ),
        migrations.AddField(
            model_name='athletestat',
            name='athlete',
            field=models.ForeignKey(db_column='athlete_id', on_delete=django.db.models.deletion.CASCADE, related_name='stats', to='etl.athlete'),
        ),
        migrations.AddField(
            model_name='athlete',
            name='team',
            field=models.ForeignKey(blank=True, db_column='team', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='athletes', to='etl.team'),
        ),
        migrations.AddIndex(
            model_name='athletestat',
            index=models.Index(fields=['game_week'], name='athlete_sta_game_we_ce28e5_idx'),
        ),
        migrations.AddConstraint(
            model_name='athletestat',
            constraint=models.UniqueConstraint(fields=('athlete', 'game_week'), name='unique_athlete_gameweek'),
        ),
    ]
